{"version":3,"sources":["logo.svg","components/Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","typistIndex","firstShowDelay","firstShowOffset","$","css","height","window","on","width","h","y","scrollTop","nav","outerWidth","fadeOut","removeClass","fadeIn","addClass","_this2","noCursor","show","blink","element","react_default","a","createElement","id","className","href","title","Typist_default","cursor","hideWhenDone","hideWhenDoneDelay","Delay","ms","key","onTypingDone","setState","style","fontSize","text","delete","map","word","Backspace","count","delay","target","Component","App","Header_Header_Header","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d42e3ddb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport Typist from 'react-typist';\n\nimport './Header.css';\n\nexport default class Header extends Component {\n  constructor() {\n    super();\n    this.state = {\n      typistIndex: 0,\n      firstShowDelay: 6000,\n      firstShowOffset: 1,\n    };\n  }\n  componentDidMount() {\n    /*----------------------------------------------------*/\n    /*\tMake sure that #header-background-image height is\n    /* equal to the browser height.\n    ------------------------------------------------------ */\n\n    $('header').css({ height: $(window).height() });\n    $(window).on('resize', () => {\n      $('header').css({\n        height: $(window).height() > 768 ? $(window).height() : 768,\n      });\n      $('body').css({ width: $(window).width() });\n    });\n\n    /*----------------------------------------------------*/\n    /*\tFade In/Out Primary Navigation\n    ------------------------------------------------------*/\n\n    $(window).on('scroll', () => {\n      const h = $('header').height();\n      const y = $(window).scrollTop();\n      const nav = $('#nav-wrap');\n\n      if (y > h * 0.2 && y < h && $(window).outerWidth() > 768) {\n        nav.fadeOut('fast');\n      } else {\n        if (y < h * 0.2) {\n          nav.removeClass('opaque').fadeIn('fast');\n        } else {\n          nav.addClass('opaque').fadeIn('fast');\n        }\n      }\n    });\n  }\n\n  render() {\n    const cursor = {\n      show: true,\n      blink: true,\n      element: '|',\n      hideWhenDone: true,\n      hideWhenDoneDelay: 0,\n    };\n    const noCursor = {\n      show: false,\n      blink: false,\n      element: '',\n    };\n    const actionWords = [\n      { text: 'A CREATIVE', delete: 10, id: 'acCreat' },\n      { text: 'AN IMPROVING', delete: 12, id: 'acImpr' },\n      { text: 'A PASSIONATE', delete: 12, id: 'acPass' },\n      { text: 'AN OPEN-MINDED', delete: 14, id: 'acOpen' },\n      { text: 'A DATA-DRIVEN', delete: 13, id: 'acData' },\n    ];\n    return (\n      // <React.Fragment>\n      <header id='home'>\n        <nav id='nav-wrap' className=''>\n          <a className='mobile-btn' href='#nav-wrap' title='Show navigation'>\n            Show navigation\n          </a>\n          <a className='mobile-btn' href='#' title='Hide navigation'>\n            Hide navigation\n          </a>\n          <ul id='nav' className='nav '>\n            <li className='current'>\n              <a className='smoothscroll' href='#home'>\n                Home\n              </a>\n            </li>\n            <li>\n              <a className='smoothscroll' href='#about'>\n                About\n              </a>\n            </li>\n            <li>\n              <a className='smoothscroll' href='#resume'>\n                Resume\n              </a>\n            </li>\n            <li>\n              <a className='smoothscroll' href='#portfolio'>\n                Works\n              </a>\n            </li>\n            <li>\n              <a className='smoothscroll' href='#testimonials'>\n                Testimonials\n              </a>\n            </li>\n            <li>\n              <a className='smoothscroll' href='#contact'>\n                Contact\n              </a>\n            </li>\n          </ul>\n        </nav>\n\n        <div className='row banner'>\n          <div className='banner-text responsive-headline'>\n            <Typist cursor={cursor}>\n              <Typist.Delay ms={2000} />\n              <span id='hello'>HELLO</span>\n              <Typist.Delay ms={1500} />\n              <p id='yehor'>I'M YEHOR</p>\n            </Typist>\n\n            <Typist\n              cursor={noCursor}\n              key={this.state.typistIndex}\n              onTypingDone={() => {\n                this.setState(state => ({\n                  typistIndex: state.typistIndex + 1,\n                  firstShowDelay: 0,\n                  firstShowOffset: 0,\n                }));\n              }}\n            >\n              <span style={{ fontSize: 0 }}>.</span>\n              {actionWords.map(word => [\n                word.text === 'A CREATIVE' ? (\n                  <Typist.Delay ms={this.state.firstShowDelay} />\n                ) : (\n                  ''\n                ),\n                <span id={word.id} className='whoami'>\n                  {word.text}\n                </span>,\n                <Typist.Backspace count={word.delete} delay={3000} />,\n              ])}\n            </Typist>\n            <Typist cursor={noCursor}>\n              <Typist.Delay ms={7000} />\n              <p id='webdev'> WEB DEVELOPER</p>\n            </Typist>\n\n            <div id='slide'>\n              <p id='where'>I STAND ON A SWEET SPOT WHERE</p>\n              <p id='creativity'>CREATIVITY</p>\n              <span id='and'>AND </span>\n              <span id='code'>CODE</span>\n              <p id='meet'>INTERSECT</p>\n              <span className='f6 black'>\n                The website is under construction!\n              </span>\n            </div>\n            <hr />\n\n            <ul className='social'>\n              <li>\n                <a href='https://www.linkedin.com/in/yehorkalm/' target='blank'>\n                  <i className='fab fa-linkedin-in' />\n                </a>\n              </li>\n              <li>\n                <a href='https://github.com/yehorkalm/'>\n                  <i className='fab fa-github' />\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        <p className='scrolldown'>\n          <a className='smoothscroll' href='#about'>\n            <i className='icon-down-circle' />\n          </a>\n        </p>\n      </header>\n      // </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport jQuery from 'jquery';\n\nimport Header from './components/Header/Header';\nimport About from './components/About/About';\nimport Resume from './components/Resume/Resume';\nimport Portfolio from './components/Portfolio/Portfolio';\nimport Testimonials from './components/Testimonials/Testimonials';\nimport ContactUs from './components/Contact/Contact';\nimport Footer from './components/Footer/Footer';\n\nimport logo from './logo.svg';\nimport 'tachyons';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <Header />\n\n        {/* <About />\n        <Resume />\n        <Portfolio />\n        <Testimonials />\n        <ContactUs />\n        <Footer /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}